export default [
    {
        "title": "Home",
        "fileName": "index.html",
        "text": "Home Custom Quote Sync Metadata-driven Quote-Opportunity custom field synchronization (based on Salesforce Labs Custom Quote Sync ) Custom Quote Sync Changelog Installation Instructions General Description Benefits What's Included What Salesforce syncs automatically Fields synced by default NON-Synced fields of interest Configuration Custom Metadata Types Bypass Using Your Own Trigger Framework Known Limitations Changelog Installation Instructions AppExchange Listing: Latest package(Production): https://login.salesforce.com/packaging/installPackage.apexp?p0=04t3a000000LddNAAS Latest package(Sandbox): https://test.salesforce.com/packaging/installPackage.apexp?p0=04t3a000000LddNAAS General Description This app allows you to configure custom fields mapping between Opportunity and Quote, and custom fields on OpportunityLineItem and QuoteLineItem. The mapped fields will be synchronized automatically similar to the standard Quote Sync process. Syncing is skipped for all Quotes without an Opportunity(which can be enabled in setup). Benefits This package uses Custom Metadata  so your customizations are preserved in sandboxes.(Custom Settings would not be preserved.) This includes all synchronized fields and configuration values. The ability to use the included triggers or your own means that you have complete control over the order of execution within, say, your Opportunity trigger handler. What's Included This package comes with some code to sync custom fields between Opportunities and Quotes(and their Line Items), but it needs to know which fields to map between the proper objects. This is achieved via Custom Metadata Types. Indicate the Opportunity and Quote(or Line Item) field names on the correct CMT and the package will do the rest. What Salesforce syncs automatically See the documentation here: https://help.salesforce.com/s/articleView?id=sf.quotes_synch_overview.htm&type=5 Fields synced by default Some fields do not need to be specified, as Salesforce will synchronize those values automatically between the Opportunity and the syncing Quote, and between line items. These are the standard fields: Opportunity Quote ContactId ContactId Division Division Id OpportunityId Pricebook2Id Pricebook2Id SyncedQuoteId Id OpportunityLineItem Field Name QuoteLineItem Field Name Note Id OpportunityLineItemId primary matching key Description Description LINE descriptions are synchronized. Discount Discount SortOrder SortOrder PricebookEntryId PricebookEntryId updates List Price, Product, etc Quantity Quantity ServiceDate ServiceDate Label: Date UnitPrice UnitPrice Label: Sales Price If there are no line items, Opportunity.Amount  does NOT synchronize with the Quote.GrandTotal  field. The only way to have a total amount on a Quote is to add Line Items. There are some Opportunity and Quote fields that do not \"line up\" with each other. For example, there may be a Tax field on Quote, but there is not one on Opportunity. They may be included in custom syncing configuration, but there WILL be errors if one of the fields cannot be written to(such a a formula field). NON-Synced fields of interest Quote.Description  and Opportunity.Description  - though line item Description  fields are automatically synchronized by the platform QuoteLineItem.LineNumber  An autonumber field that has no parallel field on OpportunityLineItem Quote.LineItemCount  is a standard field with no corresponding field on Opportunity Configuration Custom Metadata Types Two CMTs are included for field sync config: Quote Sync Field  and Quote Line Sync Field . Four fields on each must be filled in: Go to Setup > Custom Metadata Types and click Manage Records  on one of the metadata types. We will use Quote Sync Field  as our example. If you are syncing two text fields, named QuoteText__c  on Quote and OpportunityText__c  on Opportunity, create a custom metadata type with the following: Name and DeveloperName are user-friendly fields and are not used by the app. Perhaps call this entry Text . DeveloperName  must be unique. Type the field names into the Quote Field (QuoteText__c ) and Opportunity Field (OpportunityText__c ) fields. this single record is used for both directions of synchronization. Save the record and go to the next one. Again, the same CMT records are used for updating the Opportunity from its syncing Quote, and for updating the syncing Quote from its Opportunity. Bypass You may wish to deactivate quote syncing for the entire org, specific users, or specific profiles. Do this by going to the included Custom Setting Quote_Sync_Bypass__c  and selecting Bypass__c  for the appropriate records. Using Your Own Trigger Framework This package comes with four triggers, but you may wish to run the sync actions at a specific place in your automations. This is possible; you just need to bypass the triggers via Custom Metadata records. Call all four methods in the appropriate trigger handlers.(You can substitute your own variables for the standard Trigger.new , etc.) // Opportunity Trigger(after update) new x2qcs.QuoteSyncHandler().syncOpportunities(Trigger.new, Trigger.oldMap); // Quote Trigger(after insert, after update) new x2qcs.QuoteSyncHandler().syncQuotes(Trigger.new, Trigger.oldMap); // OpportunityLineItem Trigger(after insert, after update) new x2qcs.QuoteSyncHandler().syncOppLines(Trigger.new, Trigger.oldMap); // QuoteLineItem Trigger(after insert, after update) new x2qcs.QuoteSyncHandler().syncQuoteLines(Trigger.new, Trigger.oldMap); Update the Use Packaged Triggers  preference/configuration in the Configure  screen accessible from the Installed Packages  list. False  means you will call the handler methods from your custom triggers. There, you can also view the users who have been assigned application licenses Known Limitations Syncing a read-only field on OpportunityLineItem , such as ProductCode  with a custom field on QuoteLineItem  will fail because one of the fields is read-only. This will cause an error. Do not include read-only fields in your sync configurations."
    },
    {
        "title": "installation",
        "fileName": "installation.html",
        "text": "Installation Instructions Install from the AppExchange https://www.x2od.com/getqcs"
    },
    {
        "title": "changelog",
        "fileName": "changelog.html",
        "text": "Changelog 1.0.1 (2023-04-29) Bug Fixes ci:  Stop PR validation on package.json change(a498e78 ) packaging:  Run action on released package(da6c973 ) 1.0.0 (2023-04-29) Build System deps-dev:  Bump lint-staged from 13.2.1 to 13.2.2(#20 )(743c54f ) Code Refactoring Code cleanup(#21 )(16fbe73 ) Miscellaneous Chores Release 1.0.0(#24 )(25b6b2b ) Continuous Integration deps:  Bump mitchspano/sfdx-scan-pull-request from 0.1.9 to 0.1.10(#23 )(b265d9f ) packaging:  Action to create package version(#25 )(e3105ba ) 0.2.1 (2023-04-24) Features Release beta 2, create unlocked package(#17 )(e51c980 ) Bug Fixes ApexDox:  Fix installation pagename(c926bfb ) Build System deps:  Bump yaml from 2.2.1 to 2.2.2(#18 )(a45f456 ) Documentation Update ApexDox(d546120 ) Continuous Integration Update codecov target(275f0d6 ) 0.2.0 (2023-04-22) âš  BREAKING CHANGES pre-release code alpha(#15 ) Features Add page layouts - may be removed later(c0f3da3 ) Add permission set for unpackaged(60cd32e ) Create QuoteSyncHandler(1effbe5 ) Include unpackaged metadata(cd9a900 ) Move all triggers to new handler(08e5e95 ) Pre-release code alpha(#15 )(a1bfd5b ) tests:  Include more field types(52a08cb ) tests:  Include Text custom metadata & perms(81526c3 ) tests:  Update lineitem handler so tests pass(49be9ff ) tests:  Use text field until Boolean fixed(f5037a6 ) Bug Fixes Avoid FLS check for all fields(eb1a019 ) Move unpackaged metadata(f7f98e6 ) Remove unnecessary trigger handler base class(73e61f2 ) tests:  Make dates & datetimes more unique(461c6c9 ) Update API version, remove extra line(b26aa69 ) Continuous Integration Add permission set(40100b3 ) Update scripts, project docs(604b709 ) Build System Add scratch org feature(af52c56 ) deps-dev:  Bump lint-staged from 13.2.0 to 13.2.1(#10 )(f107d14 ) deps-dev:  Bump release-please from 15.10.1 to 15.10.3(#12 )(8b13466 ) deps-dev:  Bump release-please from 15.10.3 to 15.10.4(#13 )(eacebdb ) deps-dev:  Bump release-please from 15.9.2 to 15.10.1(#11 )(84a736d ) Fix scratch org definition file(8816053 ) Pull scratch org settings for baseline(bfc37c0 ) Remove settings, ApexDox config(fbba24e ) Reorder project settings file lines(d113592 ) Update devDependencies(2916020 ) Update scratch org definitions(aa8102f ) Miscellaneous Chores Project files(c821df8 ) Release 0.2.0(830cdf1 ) Update API to v57(73bd6fc ) Update project docs(8272973 ) Tests Add start and stop methods(31fbccb ) Include Boolean in package tests(70049c9 ) Include debug to raise coverage(for now)(60cafb1 ) packaging:  Add all field types for tests(7dc1a46 ) Code Refactoring Add curly brackets to all if statements(0b2d2c3 ) Add debug for handler, write null values(fa9a7e1 ) Mark some methods deprecated(aab1748 ) Move TriggerStopper to SyncHandler(dee9716 ) Rearrange collection items(91cdf52 ) Remove some comments(887b04a ) Remove variable from debug(ea09496 ) Run prettier, rename variables(382f1c1 ) tests:  Specify Id as parameter type(c5304f2 ) Use set, not list, for field collections(65c3d2c ) Use switch for utils, add ApexDocs(a41a8a8 ) Variable names & uncomment debugs(233b8b3 ) Documentation ApexDox:  Fix URLs in ApexDox(1e79aaf ) Method documentation, formatting(4ebb6ad ) Update ApexDox(c95d559 ) Update ApexDox(c32c3eb ) Update method descriptions(31fbccb ) Update README(bd44e3a ) 0.1.1 (2023-04-05) Features Include TriggerHandler and docs(#7 )(7a8f26a ) Continuous Integration SemVar:  Remove manual version number(91c1687 ) Build System Sfdx scripts and README updates(#8 )(75e1d81 ) Miscellaneous Chores Clean Labs code to create final prerelease(#9 )(8e68a17 ) Documentation ApexDox:  Initialize ApexDox(#5 )(6f7d4b9 ) Update ApexDox(7d9264b ) Update CI badges to show main branch only(349afb6 ) 0.1.0(2023-04-05) Features Initial commit of SalesforceLabs code(9d50fce ) Initial commit of SalesforceLabs code(27496ff ) Sfdx format(#1 )(12a969b ) Bug Fixes Release-please manifest & changelog reset(36edc5d ) release-please:  Add token to action(3a494c0 ) Reverts release-please:  Remove package name(e73ba3a ) Miscellaneous Chores Base SFDX project(c57d660 ) Delete sample Apex tests(9d50fce ) Delete sample Apex tests(117fc1d ) Initial project template commit(56dac21 ) Build System Update package-lock version(f5bf617 ) Continuous Integration Deactivate PMD checks until code is revised(40ad94b ) deps:  Bump google-github-actions/release-please-action from 3.7.4 to 3.7.6(#4 )(2daf1b1 ) deps:  Bump mitchspano/sfdx-scan-pull-request from 0.1.8 to 0.1.9(#3 )(e3e7d93 ) pmd:  Update action output check(f67e2a0 ) pmd:  Update pmd CLI executable for v7(d470ab6 ) pmd:  Update pmd CLI executable for v7(7dcb900 ) Release-please to sfdx type(d63b809 ) release-please:  Initial version(e5f74ef ) release-please:  Remove package name(2138be9 ) release-please:  Revert to salesforce type(fcc4dac ) release-please:  Use custom token(442322d ) release-please:  Use latest RP version(4346ba0 )"
    },
    {
        "title": "ConfigController",
        "fileName": "ConfigController.html",
        "text": "ConfigController Controller for Config page to control package configuration Signature @SuppressWarnings('PMD.ApexDoc') public with sharing class ConfigController Author David Schach Since 2024 ConfigController Properties Name Signature Description allowedLicenses public String allowedLicenses Number of licenses purchased(as a string) for this application configWrappers public List<ConfigWrap> configWrappers Hold all Quote_Custom_Sync_Config__mdt  records in a wrapper currentVFPage public String currentVFPage String to hold current page name, for navigation expirationDate public Date expirationDate Package expiration date licensedUsers public List<User> licensedUsers Users with UserPackageLicense  records purchasedLicenses public Integer purchasedLicenses Number of licenses purchased for this application status public String status package status usedLicenses public Integer usedLicenses Number of licenses assigned for this application ConfigController Constructors ConfigController() Constructor ConfigController() Constructor Signature public ConfigController() ConfigController Methods IN() refreshPage() Return this page, with full cache refresh sendFeatureParameters() Send configuration values to LMO setupConfigData() Get configuration custom metadtata records in constructor setupLicenseData() Query required data in constructor updateConfigs() Update the selected custom metadata record IN() Signature Id IN(\t\t\t\t\tSELECT UserId\t\t\t\t\tFROM UserPackageLicense\t\t\t\t\tWHERE PackageLicense.NamespacePrefix = 'x2qcs'\t\t\t\t) refreshPage() Return this page, with full cache refresh Signature public PageReference refreshPage() Returns Full refresh of Config page sendFeatureParameters() Send configuration values to LMO Signature private void sendFeatureParameters() setupConfigData() Get configuration custom metadtata records in constructor Signature @TestVisible private void setupConfigData() setupLicenseData() Query required data in constructor Signature private void setupLicenseData() updateConfigs() Update the selected custom metadata record Signature public PageReference updateConfigs() ConfigController.ConfigWrap Config wrapper Signature public class ConfigWrap implements Comparable ConfigController.ConfigWrap Properties Name Signature description public String description enabled public Boolean enabled key public String key label public String label ConfigController.ConfigWrap Constructors ConfigWrap(cc) Wrapper for configs shown on page ConfigWrap(testlabel) A constructor only available for testing that allows testing of the sort method ConfigWrap(cc) Wrapper for configs shown on page Signature public ConfigWrap(Quote_Custom_Sync_Config__mdt cc) Parameters cc Type: Quote_Custom_Sync_Config__mdt Custom metadata record ConfigWrap(testlabel) A constructor only available for testing that allows testing of the sort method Signature @TestVisible private ConfigWrap(String testlabel) Parameters testlabel Type: String String for a \"fake\" wrapper so we can properly test our custom sort ConfigController.ConfigWrap Methods compareTo(compareTo) Compare config items based on the label compareTo(compareTo) Compare config items based on the label Signature public Integer compareTo(Object compareTo) Parameters compareTo Type: public Integer Compared record Returns Integer  for sorting"
    },
    {
        "title": "CustomMetadataClient",
        "fileName": "CustomMetadataClient.html",
        "text": "CustomMetadataClient Signature public inherited sharing class CustomMetadataClient Author https://www.tostring.co.uk/custom-metadata-webservice-client CustomMetadataClient Methods deleteMetadata(type, developerName) deleteMetadata(type, developerNames) deleteMetadata(type, fullNames, allOrNone) upsertMetadata(objectType, record) upsertMetadata(type, metadatas) upsertMetadata(metadatas, allOrNone) deleteMetadata(type, developerName) Signature static public Database.DeleteResult deleteMetadata(SObjectType type, String developerName) deleteMetadata(type, developerNames) Signature static public List<Database.DeleteResult> deleteMetadata(SObjectType type, List<String> developerNames) deleteMetadata(type, fullNames, allOrNone) Signature public List<DeleteResult> deleteMetadata(String type, List<String> fullNames, Boolean allOrNone) Example String type = 'CustomMetadata'; String fullName = 'MyMeta__mdt.Record1'; client.deleteMetadata(type, new List<String>{fullName}, true); upsertMetadata(objectType, record) Signature static public Database.UpsertResult upsertMetadata(SObjectType objectType, Map<SObjectField, Object> record) upsertMetadata(type, metadatas) Signature static public List<Database.UpsertResult> upsertMetadata(SObjectType type, List<Map<SObjectField, Object>> metadatas) upsertMetadata(metadatas, allOrNone) Signature public List<UpsertResult> upsertMetadata(List<Metadata> metadatas, Boolean allOrNone) Example String sessionId = UserInfo.getSessionId(); MetadataClient client = new MetadataClient(sessionId); CustomMetadataClient.AllOrNoneHeader_element Signature class AllOrNoneHeader_element CustomMetadataClient.AllOrNoneHeader_element Properties Name Signature sid private static String sid CustomMetadataClient.CustomMetadata Signature class CustomMetadata extends Metadata CustomMetadataClient.CustomMetadataValue Signature class CustomMetadataValue CustomMetadataClient.deleteMetadata_element Signature class deleteMetadata_element CustomMetadataClient.deleteMetadata_element Properties Name Signature Description protocolAndHost public static String protocolAndHost Determines the true API hostname for a Salesforce org using the Identity URL  Why not just use Url.getSalesforceBaseUrl? The return value can be any of the following: - http://pod.salesforce.com(from a batch apex class) - https://c.na1.visual.force.com(a local Visualforce Page) - https://mysite.secure.force.com(from a Force.com Site) - https://ns.pod.visual.force.com(some page in a managed package) set private set CustomMetadataClient.DeleteMetadataMock Signature class DeleteMetadataMock implements WebServiceMock CustomMetadataClient.DeleteMetadataMock Methods doInvoke(stub, request, response, endpoint, soapAction, requestName, responseNS, responseName, responseType) doInvoke(stub, request, response, endpoint, soapAction, requestName, responseNS, responseName, responseType) Signature public void doInvoke(\t\t\tObject stub,\t\t\tObject request,\t\t\tMap<String, Object> response,\t\t\tString endpoint,\t\t\tString soapAction,\t\t\tString requestName,\t\t\tString responseNS,\t\t\tString responseName,\t\t\tString responseType\t\t) CustomMetadataClient.deleteMetadataResponse_element Signature class deleteMetadataResponse_element CustomMetadataClient.DeleteResult Signature class DeleteResult Example SObjectType type = SObjectType.MyMeta__mdt; Map<SObjectField,Object> metadata = new Map<SObjectField,Object>(); metadata.put(MyMeta__mdt.DeveloperName, 'Record_1') metadata.put(MyMeta__mdt.MasterLabel, 'Record One') CustomMetadata customMetadata = new CustomMetadata(type, metadata); CustomMetadataClient.Error Signature class Error CustomMetadataClient.MetadataClient This webservice class creates Custom Metadata records synchronously using the Metadata API. Signature public class MetadataClient CustomMetadataClient.SessionHeader_element Signature class SessionHeader_element Example CustomMetadataValue value = new CustomMetadataValue( Stage__mdt.Position__c, 3 ); CustomMetadataClient.upsertMetadata_element Signature class upsertMetadata_element CustomMetadataClient.upsertMetadata_element Properties Name Signature set private set CustomMetadataClient.UpsertMetadataMock Signature class UpsertMetadataMock implements WebServiceMock CustomMetadataClient.UpsertMetadataMock Methods doInvoke(stub, request, response, endpoint, soapAction, requestName, responseNS, responseName, responseType) doInvoke(stub, request, response, endpoint, soapAction, requestName, responseNS, responseName, responseType) Signature public void doInvoke(\t\t\tObject stub,\t\t\tObject request,\t\t\tMap<String, Object> response,\t\t\tString endpoint,\t\t\tString soapAction,\t\t\tString requestName,\t\t\tString responseNS,\t\t\tString responseName,\t\t\tString responseType\t\t) CustomMetadataClient.upsertMetadataResponse_element Signature class upsertMetadataResponse_element CustomMetadataClient.UpsertResult Signature @TestVisible class UpsertResult"
    },
    {
        "title": "QuoteSyncHandler",
        "fileName": "QuoteSyncHandler.html",
        "text": "QuoteSyncHandler QuoteSyncHandler class that contains all the logic that uses the QuoteSyncUtil. This class exposes methods to sync the Opportunity, Quote, OpportunityLineItem and QuoteLineItem objects and should ideally be called from each object's trigger Code adapted from QuoteSync AppExchange package, moved to single handler class Signature @SuppressWarnings('PMD.AvoidGlobalModifier') global without sharing class QuoteSyncHandler See QuoteSyncUtil Author Salesforce Labs Since 2014 Original Author Author David Schach Since 2022-08 New trigger handler framework 2022-10 Converted to Custom Metadata Types(from Custom Settings) 2022-10 Change SOQL to use IN collection, not comma-separated Ids 2023-04 Refine Quote Sync with new Quote fields 2023-04 Remove trigger framework, move stoppers into this class 2023-12 Remove extra queries, match lines using standard fields 2024-02 Check for read-only fields in sync config QuoteSyncHandler Properties Name Signature Description stopOpp private static Boolean stopOpp If true, exit Opportunity  trigger handler stopOppLine private static Boolean stopOppLine If true, exit OppoortunityLineItem  trigger handler stopQuote private static Boolean stopQuote If true, exit Quote  trigger handler stopQuoteLine private static Boolean stopQuoteLine If true, exit QuoteLineItem  trigger handler QuoteSyncHandler Methods bypassAll() Deactivate all QuoteSync triggers clearAllBypasses() Reactivate all QuoteSync triggers doBypassSync() If true, skip/bypass the sync by exiting the trigger handler getOpportunityLineItemsToUpdate(syncQuoteIds, syncOppIds, startSyncQuoteMap, qliFields, oliFields) Method that takes a set of Quote  Ids, a set of Opportunity  Ids and a map linking them together and returns a list of Opportunity Products  that should be updated to be synced getQuotesToUpdate(oppIds, quoteIds, oppFieldsString, quoteFieldsString, quoteFields) Method that gets a set of Opportunity  Ids, a set of Quote  Ids and returns a list of Quotes  that should be updated to be synced with their corresponding Opportunity getStringFromFieldsSet(fields) Method that builds a string of fields separated by a comma to be put into a Database query string syncOppLines(newRecords, oldRecordsMap) Sync Opportunity Products  to Quote Line Items (update Quote Line Items ) syncOpportunities(newRecords, oldRecordsMap) Sync Opportunities  with Quotes syncQuoteLines(newRecords, oldRecordsMap) Sync Quote Line Items  with Opportunity Products syncQuotes(newRecords, oldRecordsMap) Sync Quote  fields with Opportunity  fields bypassAll() Deactivate all QuoteSync triggers Signature @TestVisible private static void bypassAll() clearAllBypasses() Reactivate all QuoteSync triggers Signature @TestVisible private static void clearAllBypasses() doBypassSync() If true, skip/bypass the sync by exiting the trigger handler Signature @TestVisible private Boolean doBypassSync() Returns Boolean  Should the application bypass/skip the sync? getOpportunityLineItemsToUpdate(syncQuoteIds, syncOppIds, startSyncQuoteMap, qliFields, oliFields) Method that takes a set of Quote  Ids, a set of Opportunity  Ids and a map linking them together and returns a list of Opportunity Products  that should be updated to be synced Signature private static Set<OpportunityLineItem> getOpportunityLineItemsToUpdate(\t\tSet<Id> syncQuoteIds,\t\tSet<Id> syncOppIds,\t\tMap<Id, Id> startSyncQuoteMap,\t\tString qliFields,\t\tString oliFields\t) Parameters syncQuoteIds Type: \t\tSet<Id> Set of Quote  Ids syncOppIds                  Set of Opportunity  Ids startSyncQuoteMap Type: Id> Map that links each Quote  Id with its synced Opportunity  Id qliFields                   List of QuoteLineItem  fields to be compared oliFields                   List of OpportunityLineItem  fields to be compared Returns Set<OpportunityLineItem>  that should be updated getQuotesToUpdate(oppIds, quoteIds, oppFieldsString, quoteFieldsString, quoteFields) Method that gets a set of Opportunity  Ids, a set of Quote  Ids and returns a list of Quotes  that should be updated to be synced with their corresponding Opportunity Signature private static List<Quote> getQuotesToUpdate(\t\tSet<Id> oppIds,\t\tSet<Id> quoteIds,\t\tString oppFieldsString,\t\tString quoteFieldsString,\t\tSet<String> quoteFields\t) Parameters oppIds Type: \t\tSet<Id> Set of Opportunity  Ids quoteIds          Set of Quote  Ids oppFieldsString   List of comma separated  Opportunity  fields to be compared quoteFieldsString List of comma separated quote fields to be compared(in a string) quoteFields       List of Quote  fields in a list Returns List<Quote>     that should be updated Author David Schach Since 2022 getStringFromFieldsSet(fields) Method that builds a string of fields separated by a comma to be put into a Database query string Signature private String getStringFromFieldsSet(Set<String> fields) Parameters fields Type: Set<String> Set of field names Returns String  with the fields separated by commas syncOppLines(newRecords, oldRecordsMap) Sync Opportunity Products  to Quote Line Items (update Quote Line Items ) Signature global void syncOppLines(List<OpportunityLineItem> newRecords, Map<Id, OpportunityLineItem> oldRecordsMap) Parameters newRecords Type: List<OpportunityLineItem> New OpportunityLineItems  from Trigger.new oldRecordsMap Type: Map<Id, OpportunityLineItem> Old OpportunityLineItems  in a map from Trigger.oldMap syncOpportunities(newRecords, oldRecordsMap) Sync Opportunities  with Quotes Signature global void syncOpportunities(List<Opportunity> newRecords, Map<Id, Opportunity> oldRecordsMap) Parameters newRecords Type: List<Opportunity> New Opportunities  from Trigger.new oldRecordsMap Type: Map<Id, Opportunity> Old Opportunities  in a map from Trigger.oldMap syncQuoteLines(newRecords, oldRecordsMap) Sync Quote Line Items  with Opportunity Products Signature global void syncQuoteLines(List<QuoteLineItem> newRecords, Map<Id, QuoteLineItem> oldRecordsMap) Parameters newRecords Type: List<QuoteLineItem> New QuoteLineItems  from Trigger.new oldRecordsMap Type: Map<Id, QuoteLineItem> Old QuoteLineItems  in a map from Trigger.oldMap syncQuotes(newRecords, oldRecordsMap) Sync Quote  fields with Opportunity  fields Signature global void syncQuotes(List<Quote> newRecords, Map<Id, Quote> oldRecordsMap) Parameters newRecords Type: List<Quote> New Quotes  from Trigger.new oldRecordsMap Type: Map<Id, Quote> Old Quotes  in a map from Trigger.oldMap"
    },
    {
        "title": "QuoteSyncUtil",
        "fileName": "QuoteSyncUtil.html",
        "text": "QuoteSyncUtil Open-source version of Quote-Opportunity Sync Signature public without sharing class QuoteSyncUtil See QuoteSync Author Salesforce Labs Since 2014 Original Author Author David Schach Since 2022-10 Converted to Custom Metadata 2022-10 Change if else to switch 2023-04 Refine Quote Sync with new Quote fields 2023-12 Allow for namespaced org with non-namespaced custom metadata entries 2024-02 Reinstate newQuoteIds set QuoteSyncUtil Properties Name Signature Annotations Description newQuoteIds private static Set<Id> newQuoteIds Set of all new Quote Ids, maintained for the trigger handler objectDescribes private static Map<String, Schema.DescribeSObjectResult> objectDescribes @TestVisible Global describe - memoized OPP_FIELDS private static final Map<String, SObjectField> OPP_FIELDS All Opportunity  fields OPP_LINE_FIELDS private static final Map<String, SObjectField> OPP_LINE_FIELDS All OpportunityLineItem  fields oppLineRequiredFields public static Map<String, Schema.DescribeFieldResult> oppLineRequiredFields Custom, non-synced fOpportunity Line Item  ields oppRequiredFields public static Map<String, Schema.DescribeFieldResult> oppRequiredFields Custom, non-synced Opportunity  fields orgNamespace private static String orgNamespace The org namespaces. Useful mostly in package development for unpackaged metadata used in testing. QUOTE_FIELDS private static final Map<String, SObjectField> QUOTE_FIELDS All Quote  fields QUOTE_LINE_FIELDS private static final Map<String, SObjectField> QUOTE_LINE_FIELDS All QuoteLineItem  fields quoteFieldMap private static Map<String, String> quoteFieldMap Map Quote  field => Opportunity  for syncing quoteLineFieldMap private static Map<String, String> quoteLineFieldMap Map QuoteLineItem  field => OpportunityLineItem  for syncing quoteLineRequiredFields public static Map<String, Schema.DescribeFieldResult> quoteLineRequiredFields Custom, non-synced Quote Line Item  fields quoteRequiredFields public static Map<String, Schema.DescribeFieldResult> quoteRequiredFields Custom, non-synced Quote  fields set private set set private set standardOppFields public static Set<String> standardOppFields Standard fields are not synced by this app - Salesforce does that automatically These are for test debugging, and we prevent writing to them when syncing Quotes standardOppLineItemFields public static Set<String> standardOppLineItemFields Standard fields are not synced by this app - Salesforce does that automatically These are for test debugging, and we prevent writing to them when syncing Quotes standardQuoteFields public static Set<String> standardQuoteFields Standard fields are not synced by this app - Salesforce does that automatically These are for test debugging, and we prevent writing to them when syncing Opps standardQuoteLineItemFields public static Set<String> standardQuoteLineItemFields Standard fields are not synced by this app - Salesforce does that automatically These are for test debugging, and we prevent writing to them when syncing Opps QuoteSyncUtil Methods addNamespace(fieldName) If an org has a namespace and a custom field has no namespace in the custom metadata specification, prepend that namespace to the field. addNewQuoteId(qid) Getter for newQuoteIds  variable addQuoteField(quoteField, oppField) Add a Quote field to the fields to sync addQuoteLineField(qliField, oliField) Add a QuoteLineItem field to the fields to sync getCustomRequiredFields(entity) Collect all custom fields for an object, and skip fields we need to sync. We may be able to memoize this, but since it's not called directly, there's low risk getField(entity, field) Given an object and field, return the Schema.DescribeFieldResult getOppFields() Return quoteFieldMap  values as a set getOppFieldsString() Join quoteFieldMap  values(Opportunity  fields) with commas getOppLineFields() Return quoteLineFieldMap  values as a set getOppLineFieldsString() Concatenate all mapped OpportunityLineItem fields with a comma getQuoteFieldMapTo(quoteField) Given a Quote  field, find the mapped Opportunity  field getQuoteFields() Return quoteFieldMap  keyset getQuoteFieldsString() Join quoteFieldMap  keyset with commas getQuoteLineFieldMapTo(quoteLineField) Given a QuoteLineItem  field, find the mapped Opportunity  field getQuoteLineFields() Return quoteLineFieldMap  keyset getQuoteLineFieldsString() Concatenate all mapped QuoteLineItem fields with a comma isNewQuote(qid) Does the set newQuoteIds  contain this Id? isUserLicensed() Use Packaging.getCurrentPackageId  and UserInfo.isCurrentUserLicensedForPackage  to find if the user is licensed for this packageVersion. Note: This checks the package version, not just the(possibly broader) namespace removeAllNewQuoteIds(ids) Remove specific Ids from the newQuoteIds  set removeQuoteLineField(qliField) Remove a QuoteLineItem field from the fields to sync May be removed, as not asserted in test class setContains(setOne, setTwo) Check if two sets have a string element in common. We use String.equalsIgnoreCase instead of Set.contains because the String method ignores case. addNamespace(fieldName) If an org has a namespace and a custom field has no namespace in the custom metadata specification, prepend that namespace to the field. Signature private static String addNamespace(String fieldName) Parameters fieldName Type: String The field name from the custom metadata record Returns String  The field name prepended by the org namespace addNewQuoteId(qid) Getter for newQuoteIds  variable Signature public static void addNewQuoteId(Id qid) Returns Set<Id>  newQuoteIds addQuoteField(quoteField, oppField) Add a Quote field to the fields to sync Signature public static void addQuoteField(String quoteField, String oppField) Parameters quoteField Type: String Quote field name oppField Type: String Opp field name addQuoteLineField(qliField, oliField) Add a QuoteLineItem field to the fields to sync Signature public static void addQuoteLineField(String qliField, String oliField) Parameters qliField Type: String Quote Line field name oliField Type: String Opp Line field name getCustomRequiredFields(entity) Collect all custom fields for an object, and skip fields we need to sync. We may be able to memoize this, but since it's not called directly, there's low risk Signature public static Map<String, Schema.DescribeFieldResult> getCustomRequiredFields(String entity) Parameters entity Type: String Object name - Quote, Opportunity, QuoteLineItem, or OpportunityLineItem Returns Map<String, Schema.DescribeFieldResult>  For the given object, a list of field describe results(minus our synced non-Boolean fields) Since 2022 Use switch statement getField(entity, field) Given an object and field, return the Schema.DescribeFieldResult Signature public static Schema.DescribeFieldResult getField(String entity, String field) Parameters entity Type: String Object name field Type: String Field name Returns Schema.DescribeFieldResult  for that field Since 2022 Use switch statement getOppFields() Return quoteFieldMap  values as a set Signature public static Set<String> getOppFields() Returns Set<String>  all Opp fields in CMT records Since 2023 Return a Set for uniqueness instead of a List getOppFieldsString() Join quoteFieldMap  values(Opportunity  fields) with commas Signature public static String getOppFieldsString() Returns String  Opportunity fields separated by commas Since 2023 Use String.join instead of a loop and concatenating with a comma getOppLineFields() Return quoteLineFieldMap  values as a set Signature public static Set<String> getOppLineFields() Returns Set<String>  all OpportunityLineItem  fields in CMT records Since 2023 Return a Set for uniqueness instead of a List getOppLineFieldsString() Concatenate all mapped OpportunityLineItem fields with a comma Signature public static String getOppLineFieldsString() Returns String  Comma-separated list of OpportunityLineItem fields Since 2023 Use String.join instead of a loop and concatenating with a comma getQuoteFieldMapTo(quoteField) Given a Quote  field, find the mapped Opportunity  field Signature public static String getQuoteFieldMapTo(String quoteField) Parameters quoteField Type: String Quote field name Returns String  Opportunity field mapped from provided Quote field getQuoteFields() Return quoteFieldMap  keyset Signature public static Set<String> getQuoteFields() Returns Set<String>  All Quote  fields in CMT records getQuoteFieldsString() Join quoteFieldMap  keyset with commas Signature public static String getQuoteFieldsString() Returns String  Quote fields separated by commas Since 2023 Use String.join instead of a loop and concatenating with a comma getQuoteLineFieldMapTo(quoteLineField) Given a QuoteLineItem  field, find the mapped Opportunity  field Signature public static String getQuoteLineFieldMapTo(String quoteLineField) Parameters quoteLineField Type: String QuoteLineItem  field name Returns String  Opportunity field name getQuoteLineFields() Return quoteLineFieldMap  keyset Signature public static Set<String> getQuoteLineFields() Returns Set<String>  All QuoteLineItem  fields in CMT records getQuoteLineFieldsString() Concatenate all mapped QuoteLineItem fields with a comma Signature public static String getQuoteLineFieldsString() Returns String  Comma-separated list of QuoteLineItem fields Since 2023 Use String.join instead of a loop and concatenating with a comma isNewQuote(qid) Does the set newQuoteIds  contain this Id? Signature public static Boolean isNewQuote(Id qid) Parameters qid Type: Id QuoteId Returns Boolean  newQuoteIds.contains(qid); isUserLicensed() Use Packaging.getCurrentPackageId  and UserInfo.isCurrentUserLicensedForPackage  to find if the user is licensed for this packageVersion. Note: This checks the package version, not just the(possibly broader) namespace Signature public static Boolean isUserLicensed() Returns Boolean  Is the current user licensed for this packageVersion? removeAllNewQuoteIds(ids) Remove specific Ids from the newQuoteIds  set Signature public static void removeAllNewQuoteIds(Set<Id> ids) Parameters ids Type: Set<Id> Quote IDs to remove removeQuoteLineField(qliField) Remove a QuoteLineItem field from the fields to sync May be removed, as not asserted in test class Signature public static String removeQuoteLineField(String qliField) Parameters qliField Type: String Quote Line field name Returns String  The removed field name setContains(setOne, setTwo) Check if two sets have a string element in common. We use String.equalsIgnoreCase instead of Set.contains because the String method ignores case. Signature @TestVisible private static Boolean setContains(Set<String> setOne, Set<String> setTwo) Parameters setOne Type: Set<String> First set to compare setTwo Type: Set<String> Second set to compare Returns Return true  if setOne contains any of the elements in setTwo QuoteSyncUtil.QuoteSyncException Custom QuoteSync exception Signature public class QuoteSyncException extends Exception"
    },
    {
        "title": "ConfigControllerTest",
        "fileName": "ConfigControllerTest.html",
        "text": "ConfigControllerTest Test methods for configuration page controller Signature @IsTest private with sharing class ConfigControllerTest Author David Schach Since 2024 ConfigControllerTest Methods testConfigWrapSort() testForceError() Run the update method. We pass a parameter to \"force\" an error. testPackageDevDebug() View the page in debug mode so we can show a list of users in the package development org.(This may fail in subscriber orgs.) testUpdateConfigs() Run the update method. The library uses a mock, so we cannot assert properly. testViewCancel() View the page and cancel - this could probably replace the above test method. testViewPageFullPerms() Test just viewing the page. We assume we have at least one config record testConfigWrapSort() Signature @IsTest static void testConfigWrapSort() testForceError() Run the update method. We pass a parameter to \"force\" an error. Signature @IsTest static void testForceError() testPackageDevDebug() View the page in debug mode so we can show a list of users in the package development org.(This may fail in subscriber orgs.) Signature @IsTest static void testPackageDevDebug() testUpdateConfigs() Run the update method. The library uses a mock, so we cannot assert properly. Signature @IsTest static void testUpdateConfigs() testViewCancel() View the page and cancel - this could probably replace the above test method. Signature @IsTest static void testViewCancel() testViewPageFullPerms() Test just viewing the page. We assume we have at least one config record Signature @IsTest private static void testViewPageFullPerms()"
    },
    {
        "title": "CustomMetadataClientTest",
        "fileName": "CustomMetadataClientTest.html",
        "text": "CustomMetadataClientTest Signature @IsTest class CustomMetadataClientTest Author https://www.tostring.co.uk/custom-metadata-webservice-client CustomMetadataClientTest Methods testDeleteMetadataResultIsSuccess() testUpsertMetadataResultIsSuccess() testDeleteMetadataResultIsSuccess() Signature @IsTest static void testDeleteMetadataResultIsSuccess() testUpsertMetadataResultIsSuccess() Signature @IsTest static void testUpsertMetadataResultIsSuccess()"
    },
    {
        "title": "QuoteSyncTest",
        "fileName": "QuoteSyncTest.html",
        "text": "QuoteSyncTest Test class for Quote/Opportunity sync Signature @isTest public without sharing class QuoteSyncTest See QuoteSync , QuoteSyncUtil , QuoteSyncHandler Author Salesforce Labs Since 2014 Author David Schach Since 2022-10 Converted to Custom Metadata 2023-04 Lazy load and memoize Standard Pricebook Id 2023-05 Streamline testing by testing sync/no-sync only when necessary 2024-02 Optimize sync checking QuoteSyncTest Properties Name Signature Description standardPricebookId private static Id standardPricebookId Store the standard Price Book Id QuoteSyncTest Methods assertOppFieldValues(oppId, expectedOpp) assertOppLineFields(oppId, oppLines) assertQuoteFieldValues(quoteId, expectedQuote) assertQuoteLineFieldValues(quoteId, quoteLines) assertQuoteLinesNotSynced(oppId, quoteId) assertQuoteLinesNotSynced(oppId, quoteId, isCreate) assertQuoteLinesSynced(oppId, quoteId) assertQuoteLinesSynced(oppId, quoteId, sync, isCreate) assertQuoteNotSynced(oppId, quoteId, isCreate) assertQuoteNotSynced(oppId, quoteId) assertQuoteSynced(oppId, quoteId) assertQuoteSynced(oppId, quoteId, testSync, isCreate) createOpp() createOpp(setNullOrFalse) createOppLines(opp, num) Generate Opportunity Line Item  records createOppLines(opp, num, unique, setNullOrFalse) Generate Opportunity Line Item  records createOppLinesNoSync(opp, num) createQuote(opp) Given an Opportunity, create a Quote with a value in every standard and synced field createQuote(opp, setNullOrFalse) Given an Opportunity, create a Quote createQuoteLines(quote, num) createQuoteLines(quote, num, unique, setNullOrFalse) createQuoteLinesNoSync(quote, num) createValue(sobj, entity, field, result, setNullOrFalse) Create a standard value for each field in our org. This could be done more elegantly with fewer parameters, but it is effective like this. getStandardPricebookId() Memoized version of Test.getStandardPricebookId()  so we call it once and not again makeData() Set up relevant records(Product2 , Pricebook2 , PricebookEntry , and Account ) populateField(sobj, entity, field) Given an SObject and a field, fill it populateFields(sobj, entity, fields) Given an SObject and fields, fill them all populateFields(sobj, entity, fields, setNullOrFalse) Given an SObject and fields, fill them populateRequiredFields(sobj) Create a value for each custom field we are not syncing printOpp(oppId) Debug method for use in checking unit tests printOppLines(oppId) Debug method for use in checking unit tests printQuote(quoteId) Debug method for use in checking unit tests printQuoteLines(quoteId) Debug method for use in checking unit tests printSObject(so, leader, standardFields, customFields, doDebug) This method generates the debug string for use in testing. It uses a set of strings hard-coded as standard object fields and the synced fields specified in our metadata. startSync(oppId, quoteId) Set a specific Quote  as the syncing Quote stopSync(oppId) Set no Quote to sync with this Opportunity testBypass() testCreateDuplicateOppLine() Create duplicate Opportunity Product  with from same Price Book Entry testCreateDuplicateQuoteLine() Create duplicate Quote Line Item  with from same Price Book Entry testCreateQuote() Create quote from Opportunity . Verify Quote  sync fields are copied from the Opportunity . testCreateQuoteWithQuoteLine() Create quote from opp with Opportunity Product . Verify Quote Line Item  sync fields are copied from Opportunity Product . testInsertOppLineNoSync() Insert Opportunity Product  without sync fields. Verify fields on Quote Line Item  are synced.. testInsertOppLineNotSynced() Insert Opportunity Product  when opp is not synced with Quote testInsertOppLineSync() Insert Opportunity Product  with sync fields set. Verify corresponding fields on Quote Line Item  are synced.. testInsertQuoteLineNoSync() Insert Quote Line Item  without sync fields. Verify corresponding fields on Opportunity Product  are not synced.. testInsertQuoteLineNotSynced() Insert Quote Line Item  when Quote  is not synced with Opportunity . testInsertQuoteLineSync() Insert Quote Line Item  with sync fields. Verify corresponding fields on Opportunity Product  are synced.. testSetContains() Test the contains methods testStartSyncInsertOppLine() Start sync from Quote  with Quote Line Items  create new Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncInsertOppLineSetNull() Start sync from Quote  with Quote Line Items  create new Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine1() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine1a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine2() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine2a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine3() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine3a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine4() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine4a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine5() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine6() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine7() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncMatchOppLine7a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncOtherQuote() Start sync from another quote. Verify opp and Opportunity Product  fields are synced from new quote and Quote Line Item . testStartSyncQuote() Start sync from Quote . Verify opp fields are synced from Quote . testStartSyncQuoteSetNull() Start sync from Quote . Verify opp fields are synced from Quote . testStartSyncUpdateOppLine() Start sync from Quote  with Quote Line Items  update existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncUpdateOppLineSetNull() Start sync from Quote  with Quote Line Items . Update existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. testStartSyncWithQuoteLine() Start sync from Quote  with Quote Line Item . Verify Opportunity Product  fields are synced from Quote Line Item . testStartSyncWithQuoteLineSetNull() Start sync from Quote  with Quote Line Item . Verify Opportunity Product  fields are synced from Quote Line Item . testStopSync() Stop sync on verify no changeson Opportunity  & Opportunity Product , quote & Quote Line Item  fields. testSwitchErrors() Check that our switch statements filter out undesired objects testUpdateDuplicateOppLine() Update duplicate Opportunity Product  with from same Price Book Entry testUpdateDuplicateQuoteLine() Update duplicate Quote Line Item  with from same Price Book Entry testUpdateOppLineNoSync() Update Opportunity Product  non-sync fields. Verify fields on Quote Line Item  are not updated.. testUpdateOppLineNotSynced() Update Opportunity Product  when opp not synced with Quote . testUpdateOppLineSync1() Update Opportunity Product  sync fields. Verify corresponding fields on Quote Line Item  are updated.. testUpdateOppLineSync2() Update Opportunity Product  standard fields. Verify corresponding fields on Quote Line Item  are updated.. testUpdateOppLineSync3() Update Opportunity Product  sync fields. Verify corresponding fields on Quote Line Item  are updated.. testUpdateOppLineSyncSetNull() Update Opportunity Product  sync fields to null. Verify corresponding fields on Quote Line Item  are updated.. testUpdateOppNoSync() Update opp non-sync fields. Verify fields on Quote  are not updated.. testUpdateOppNotSynced() Update Opportunity  when it's is not synced with Quote . testUpdateOppSync() Update Opportunity  sync fields. Verify corresponding fields on Quote  are updated.. testUpdateOppSyncSetNull() Update Opportunity  sync fields. Verify corresponding fields on Quote  are updated.. testUpdateQuoteLineNoSync() Update Quote Line Item  non-sync fields. Verify corresponding fields on Opportunity Product  are not updated.. testUpdateQuoteLineNotSynced() Update Quote Line Item  when Quote  not synced with Opportunity . testUpdateQuoteLineSync1() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. testUpdateQuoteLineSync2() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. testUpdateQuoteLineSync3() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. testUpdateQuoteLineSyncSetNull() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. testUpdateQuoteNoSync() Update Quote  non-sync fields. Verify corresponding fields on Opportunity  are not updated.. testUpdateQuoteNotSynced() Update Quote  when it's not synced with Opportunity . testUpdateQuoteSync() Update Quote  sync fields. Verify corresponding fieldson Opportunity  are updated.. testUpdateQuoteSyncSetNull() Update Quote  sync fields. Verify corresponding fieldson Opportunity  are updated.. updateOpp(oppId) Re-fill Opportunity  fields and update Opportunity. Do not set fields to false. updateOpp(oppId, updateNullOrFalse) Re-fill Opportunity  fields and update Opportunity updateOppLines(oppId) Update standard and custom fields on OpportunityLineItem  records updateOppLines(oppId, stdSyncField, customSyncField) Update all standard and synced fields on OpportunityLineItem  records and put a value in each field updateOppLines(oppId, stdSyncField, customSyncField, updateNullOrFalse) Update fields on OpportunityLineItem  records updateOppLinesCustomSyncFields(oppId) Update only custom fields on OpportunityLineItem  records updateOppLinesStdSyncFields(oppId) Update only standard fields on OpportunityLineItem  records updateOppLinesSyncedField(oppId, field) Update a specific field on OpportunityLineItem  records for a specific Opportunity updateOppNotSyncedField(oppId) Change the Opportunity  CloseDate to today(if null - otherwise, add a day) and update. updateQuote(quoteId) Re-fill Quote  fields and update Quote updateQuote(quoteId, updateNullOrFalse) Re-fill Quote  fields and update Quote updateQuoteLines(quoteId) Update all standard and synced fields on QuoteLineItem  records and put a value in each field updateQuoteLines(quoteId, stdSyncField, customSyncField) Update fields on QuoteLineItem  records and put a value in each field updateQuoteLines(quoteId, stdSyncField, customSyncField, updateNullOrFalse) Update fields on QuoteLineItem  records updateQuoteLinesCustomSyncFields(quoteId) Update custom sync fields on QuoteLineItem  records and put a value in each field updateQuoteLinesStdSyncFields(quoteId) Update all standard fields on QuoteLineItem  records and put a value in each field updateQuoteLinesSyncedField(quoteId, field) Update a specific field on QuoteLineItem  records for a specific Quote updateQuoteNotSyncedField(quoteId) Change the Quote  Expiration date to today(if null - otherwise, add a day) and update. assertOppFieldValues(oppId, expectedOpp) Signature private static Boolean assertOppFieldValues(Id oppId, Opportunity expectedOpp) assertOppLineFields(oppId, oppLines) Signature private static Boolean assertOppLineFields(Id oppId, List<OpportunityLineItem> oppLines) assertQuoteFieldValues(quoteId, expectedQuote) Signature private static Boolean assertQuoteFieldValues(Id quoteId, Quote expectedQuote) assertQuoteLineFieldValues(quoteId, quoteLines) Signature private static Boolean assertQuoteLineFieldValues(Id quoteId, List<QuoteLineItem> quoteLines) assertQuoteLinesNotSynced(oppId, quoteId) Signature private static Boolean assertQuoteLinesNotSynced(Id oppId, Id quoteId) assertQuoteLinesNotSynced(oppId, quoteId, isCreate) Signature private static Boolean assertQuoteLinesNotSynced(Id oppId, Id quoteId, Boolean isCreate) assertQuoteLinesSynced(oppId, quoteId) Signature private static Boolean assertQuoteLinesSynced(Id oppId, Id quoteId) assertQuoteLinesSynced(oppId, quoteId, sync, isCreate) Signature private static Boolean assertQuoteLinesSynced(Id oppId, Id quoteId, Boolean sync, Boolean isCreate) assertQuoteNotSynced(oppId, quoteId, isCreate) Signature private static Boolean assertQuoteNotSynced(Id oppId, Id quoteId, Boolean isCreate) assertQuoteNotSynced(oppId, quoteId) Signature private static Boolean assertQuoteNotSynced(Id oppId, Id quoteId) assertQuoteSynced(oppId, quoteId) Signature private static Boolean assertQuoteSynced(Id oppId, Id quoteId) assertQuoteSynced(oppId, quoteId, testSync, isCreate) Signature private static Boolean assertQuoteSynced(Id oppId, Id quoteId, Boolean testSync, Boolean isCreate) createOpp() Signature private static Opportunity createOpp() createOpp(setNullOrFalse) Signature private static Opportunity createOpp(Boolean setNullOrFalse) createOppLines(opp, num) Generate Opportunity Line Item  records Signature private static List<OpportunityLineItem> createOppLines(Opportunity opp, Integer num) Parameters opp Type: Opportunity Opportunity  record num Type: Integer Number of line items to create Returns List<OpportunityLineItem> See createOppLines createOppLines(opp, num, unique, setNullOrFalse) Generate Opportunity Line Item  records Signature private static List<OpportunityLineItem> createOppLines(Opportunity opp, Integer num, Boolean unique, Boolean setNullOrFalse) Parameters opp Type: Opportunity Opportunity  record num Type: Integer Number of line items to create unique Type: Boolean Create a new Product record for each line item setNullOrFalse Type: Boolean Used when populating fields Returns List<OpportunityLineItem> See populateFields , createOppLines createOppLinesNoSync(opp, num) Signature private static List<OpportunityLineItem> createOppLinesNoSync(Opportunity opp, Integer num) createQuote(opp) Given an Opportunity, create a Quote with a value in every standard and synced field Signature private static Quote createQuote(Opportunity opp) Parameters opp Type: Opportunity The parent Opportunity record Returns Quote  The created record createQuote(opp, setNullOrFalse) Given an Opportunity, create a Quote Signature private static Quote createQuote(Opportunity opp, Boolean setNullOrFalse) Parameters opp Type: Opportunity The parent Opportunity record setNullOrFalse Type: Boolean Put null in custom fields if true. Put a value if false. Returns Quote  The created record createQuoteLines(quote, num) Signature private static List<QuoteLineItem> createQuoteLines(Quote quote, Integer num) createQuoteLines(quote, num, unique, setNullOrFalse) Signature private static List<QuoteLineItem> createQuoteLines(Quote quote, Integer num, Boolean unique, Boolean setNullOrFalse) createQuoteLinesNoSync(quote, num) Signature private static List<QuoteLineItem> createQuoteLinesNoSync(Quote quote, Integer num) createValue(sobj, entity, field, result, setNullOrFalse) Create a standard value for each field in our org. This could be done more elegantly with fewer parameters, but it is effective like this. Signature public static Object createValue(SObject sobj, String entity, String field, Schema.DescribeFieldResult result, Boolean setNullOrFalse) Parameters sobj Type: SObject SObject(not the object name) entity Type: String Object Name field Type: String Field Name result Type: Schema.DescribeFieldResult Passed DescribeFieldResult setNullOrFalse Type: Boolean If true, set field to null(or Boolean to false) Returns Object  Object with fields filled Since 2022 Use switch statement 2024 Moved to test class getStandardPricebookId() Memoized version of Test.getStandardPricebookId()  so we call it once and not again Signature public static Id getStandardPricebookId() Returns Id  Standard Pricebook Id makeData() Set up relevant records(Product2 , Pricebook2 , PricebookEntry , and Account ) Signature @TestSetup private static void makeData() populateField(sobj, entity, field) Given an SObject and a field, fill it Signature private static void populateField(SObject sobj, String entity, String field) Parameters sobj Type: SObject The SObject record entity Type: String The name of the SObject(its type) field Type: String The field to populate/update populateFields(sobj, entity, fields) Given an SObject and fields, fill them all Signature private static void populateFields(SObject sobj, String entity, Set<String> fields) Parameters sobj Type: SObject The SObject record entity Type: String The name of the SObject(its type) fields Type: Set<String> All fields to populate/update populateFields(sobj, entity, fields, setNullOrFalse) Given an SObject and fields, fill them Signature private static void populateFields(SObject sobj, String entity, Set<String> fields, Boolean setNullOrFalse) Parameters sobj Type: SObject The SObject record entity Type: String The name of the SObject(its type) fields Type: Set<String> All fields to populate/update setNullOrFalse Type: Boolean If true, set field to null(or Boolean to false) populateRequiredFields(sobj) Create a value for each custom field we are not syncing Signature public static void populateRequiredFields(SObject sobj) Parameters sobj Type: SObject Sobject record - Quote , Opportunity , QuoteLineItem , or OpportunityLineItem printOpp(oppId) Debug method for use in checking unit tests Signature private static void printOpp(Id oppId) Parameters oppId Type: Id The Opportunity  to debug Example printOpp(opp.Id); printOppLines(oppId) Debug method for use in checking unit tests Signature private static void printOppLines(Id oppId) Parameters oppId Type: Id The Opportunity  to debug Example printOppLines(opp.Id); printQuote(quoteId) Debug method for use in checking unit tests Signature private static void printQuote(Id quoteId) Parameters quoteId Type: Id The Quote  to debug Example printQuote(quote.Id); printQuoteLines(quoteId) Debug method for use in checking unit tests Signature private static void printQuoteLines(Id quoteId) Parameters quoteId Type: Id The Quote  to debug Example printQuoteLines(quote.Id) printSObject(so, leader, standardFields, customFields, doDebug) This method generates the debug string for use in testing. It uses a set of strings hard-coded as standard object fields and the synced fields specified in our metadata. Signature private static String printSObject(SObject so, String leader, Set<String> standardFields, Set<String> customFields, Boolean doDebug) Parameters so Type: SObject SObject to print leader Type: String Leading part of describe string standardFields Type: Set<String> Set of standard fields customFields Type: Set<String> All synced custom fields doDebug Type: Boolean Send output to System.debug Returns Debug string Example printSObject(oli, #################   OppLine ' + n +': Id=' + oli.Id, QuoteSyncUtil.standardOppLineItemFields, QuoteSyncUtil.getOppLineFields(), true); startSync(oppId, quoteId) Set a specific Quote  as the syncing Quote Signature private static void startSync(Id oppId, Id quoteId) Parameters oppId Type: Id Opportunity Id quoteId Type: Id Quote Id(to set as syncing quote) stopSync(oppId) Set no Quote to sync with this Opportunity Signature private static void stopSync(Id oppId) Parameters oppId Type: Id Opportunity Id testBypass() Signature @IsTest static void testBypass() testCreateDuplicateOppLine() Create duplicate Opportunity Product  with from same Price Book Entry Signature @isTest private static void testCreateDuplicateOppLine() testCreateDuplicateQuoteLine() Create duplicate Quote Line Item  with from same Price Book Entry Signature @isTest private static void testCreateDuplicateQuoteLine() testCreateQuote() Create quote from Opportunity . Verify Quote  sync fields are copied from the Opportunity . Signature @isTest private static void testCreateQuote() testCreateQuoteWithQuoteLine() Create quote from opp with Opportunity Product . Verify Quote Line Item  sync fields are copied from Opportunity Product . Signature @isTest private static void testCreateQuoteWithQuoteLine() testInsertOppLineNoSync() Insert Opportunity Product  without sync fields. Verify fields on Quote Line Item  are synced.. Signature @isTest private static void testInsertOppLineNoSync() testInsertOppLineNotSynced() Insert Opportunity Product  when opp is not synced with Quote Signature @isTest private static void testInsertOppLineNotSynced() testInsertOppLineSync() Insert Opportunity Product  with sync fields set. Verify corresponding fields on Quote Line Item  are synced.. Signature @isTest private static void testInsertOppLineSync() testInsertQuoteLineNoSync() Insert Quote Line Item  without sync fields. Verify corresponding fields on Opportunity Product  are not synced.. Signature @isTest private static void testInsertQuoteLineNoSync() testInsertQuoteLineNotSynced() Insert Quote Line Item  when Quote  is not synced with Opportunity . Signature @isTest private static void testInsertQuoteLineNotSynced() testInsertQuoteLineSync() Insert Quote Line Item  with sync fields. Verify corresponding fields on Opportunity Product  are synced.. Signature @isTest private static void testInsertQuoteLineSync() testSetContains() Test the contains methods Signature @IsTest private static void testSetContains() testStartSyncInsertOppLine() Start sync from Quote  with Quote Line Items  create new Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncInsertOppLine() testStartSyncInsertOppLineSetNull() Start sync from Quote  with Quote Line Items  create new Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncInsertOppLineSetNull() testStartSyncMatchOppLine1() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine1() testStartSyncMatchOppLine1a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine1a() testStartSyncMatchOppLine2() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine2() testStartSyncMatchOppLine2a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine2a() testStartSyncMatchOppLine3() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine3() testStartSyncMatchOppLine3a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine3a() testStartSyncMatchOppLine4() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine4() testStartSyncMatchOppLine4a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine4a() testStartSyncMatchOppLine5() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine5() testStartSyncMatchOppLine6() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine6() testStartSyncMatchOppLine7() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine7() testStartSyncMatchOppLine7a() Start sync from Quote  with Quote Line Items  that match existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncMatchOppLine7a() testStartSyncOtherQuote() Start sync from another quote. Verify opp and Opportunity Product  fields are synced from new quote and Quote Line Item . Signature @isTest private static void testStartSyncOtherQuote() testStartSyncQuote() Start sync from Quote . Verify opp fields are synced from Quote . Signature @isTest private static void testStartSyncQuote() testStartSyncQuoteSetNull() Start sync from Quote . Verify opp fields are synced from Quote . Signature @isTest private static void testStartSyncQuoteSetNull() testStartSyncUpdateOppLine() Start sync from Quote  with Quote Line Items  update existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncUpdateOppLine() testStartSyncUpdateOppLineSetNull() Start sync from Quote  with Quote Line Items . Update existing Opportunity Products  on Opportunity . Verify Opportunity Product  fields are synced. Signature @isTest private static void testStartSyncUpdateOppLineSetNull() testStartSyncWithQuoteLine() Start sync from Quote  with Quote Line Item . Verify Opportunity Product  fields are synced from Quote Line Item . Signature @isTest private static void testStartSyncWithQuoteLine() testStartSyncWithQuoteLineSetNull() Start sync from Quote  with Quote Line Item . Verify Opportunity Product  fields are synced from Quote Line Item . Signature @isTest private static void testStartSyncWithQuoteLineSetNull() testStopSync() Stop sync on verify no changeson Opportunity  & Opportunity Product , quote & Quote Line Item  fields. Signature @isTest private static void testStopSync() testSwitchErrors() Check that our switch statements filter out undesired objects Signature @IsTest private static void testSwitchErrors() testUpdateDuplicateOppLine() Update duplicate Opportunity Product  with from same Price Book Entry Signature @isTest private static void testUpdateDuplicateOppLine() testUpdateDuplicateQuoteLine() Update duplicate Quote Line Item  with from same Price Book Entry Signature @isTest private static void testUpdateDuplicateQuoteLine() testUpdateOppLineNoSync() Update Opportunity Product  non-sync fields. Verify fields on Quote Line Item  are not updated.. Signature @isTest private static void testUpdateOppLineNoSync() testUpdateOppLineNotSynced() Update Opportunity Product  when opp not synced with Quote . Signature @isTest private static void testUpdateOppLineNotSynced() testUpdateOppLineSync1() Update Opportunity Product  sync fields. Verify corresponding fields on Quote Line Item  are updated.. Signature @isTest private static void testUpdateOppLineSync1() testUpdateOppLineSync2() Update Opportunity Product  standard fields. Verify corresponding fields on Quote Line Item  are updated.. Signature @isTest private static void testUpdateOppLineSync2() testUpdateOppLineSync3() Update Opportunity Product  sync fields. Verify corresponding fields on Quote Line Item  are updated.. Signature @isTest private static void testUpdateOppLineSync3() testUpdateOppLineSyncSetNull() Update Opportunity Product  sync fields to null. Verify corresponding fields on Quote Line Item  are updated.. Signature @isTest private static void testUpdateOppLineSyncSetNull() testUpdateOppNoSync() Update opp non-sync fields. Verify fields on Quote  are not updated.. Signature @isTest private static void testUpdateOppNoSync() testUpdateOppNotSynced() Update Opportunity  when it's is not synced with Quote . Signature @isTest private static void testUpdateOppNotSynced() testUpdateOppSync() Update Opportunity  sync fields. Verify corresponding fields on Quote  are updated.. Signature @isTest private static void testUpdateOppSync() testUpdateOppSyncSetNull() Update Opportunity  sync fields. Verify corresponding fields on Quote  are updated.. Signature @isTest private static void testUpdateOppSyncSetNull() testUpdateQuoteLineNoSync() Update Quote Line Item  non-sync fields. Verify corresponding fields on Opportunity Product  are not updated.. Signature @isTest private static void testUpdateQuoteLineNoSync() testUpdateQuoteLineNotSynced() Update Quote Line Item  when Quote  not synced with Opportunity . Signature @isTest private static void testUpdateQuoteLineNotSynced() testUpdateQuoteLineSync1() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. Signature @isTest private static void testUpdateQuoteLineSync1() testUpdateQuoteLineSync2() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. Signature @isTest private static void testUpdateQuoteLineSync2() testUpdateQuoteLineSync3() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. Signature @isTest private static void testUpdateQuoteLineSync3() testUpdateQuoteLineSyncSetNull() Update Quote Line Item  sync fields. Verify corresponding fields on Opportunity Product  are updated.. Signature @isTest private static void testUpdateQuoteLineSyncSetNull() testUpdateQuoteNoSync() Update Quote  non-sync fields. Verify corresponding fields on Opportunity  are not updated.. Signature @isTest private static void testUpdateQuoteNoSync() testUpdateQuoteNotSynced() Update Quote  when it's not synced with Opportunity . Signature @isTest private static void testUpdateQuoteNotSynced() testUpdateQuoteSync() Update Quote  sync fields. Verify corresponding fieldson Opportunity  are updated.. Signature @isTest private static void testUpdateQuoteSync() testUpdateQuoteSyncSetNull() Update Quote  sync fields. Verify corresponding fieldson Opportunity  are updated.. Signature @isTest private static void testUpdateQuoteSyncSetNull() updateOpp(oppId) Re-fill Opportunity  fields and update Opportunity. Do not set fields to false. Signature private static Opportunity updateOpp(Id oppId) Parameters oppId Type: Id Opportunity Id Returns Opportunity  The updated Opportunity See QuoteSyncTest.updateOpp updateOpp(oppId, updateNullOrFalse) Re-fill Opportunity  fields and update Opportunity Signature private static Opportunity updateOpp(Id oppId, Boolean updateNullOrFalse) Parameters oppId Type: Id Opportunity Id updateNullOrFalse Type: Boolean Put null in custom fields if true. Put values if false. Returns Opportunity  The updated Opportunity updateOppLines(oppId) Update standard and custom fields on OpportunityLineItem  records Signature private static List<OpportunityLineItem> updateOppLines(Id oppId) Parameters oppId Type: Id Opportunity Id Returns List<OpportunityLineItem>  Updated Opportunity Product records See QuoteSyncTest.updateOppLines updateOppLines(oppId, stdSyncField, customSyncField) Update all standard and synced fields on OpportunityLineItem  records and put a value in each field Signature private static List<OpportunityLineItem> updateOppLines(Id oppId, Boolean stdSyncField, Boolean customSyncField) Parameters oppId Type: Id OpportunityId stdSyncField Type: Boolean Update standard fields? customSyncField Type: Boolean Update custom sync fields? Returns List<OpportunityLineItem>  Updated Opportunity Product records See QuoteSyncTest.updateOppLines updateOppLines(oppId, stdSyncField, customSyncField, updateNullOrFalse) Update fields on OpportunityLineItem  records Signature private static List<OpportunityLineItem> updateOppLines(Id oppId, Boolean stdSyncField, Boolean customSyncField, Boolean updateNullOrFalse) Parameters oppId Type: Id OpportunityId stdSyncField Type: Boolean Update standard fields? customSyncField Type: Boolean Update custom sync fields? updateNullOrFalse Type: Boolean Put null in custom fields if true. Put values if false. Returns List<OpportunityLineItem>  Updated Opportunity Product records updateOppLinesCustomSyncFields(oppId) Update only custom fields on OpportunityLineItem  records Signature private static List<OpportunityLineItem> updateOppLinesCustomSyncFields(Id oppId) Parameters oppId Type: Id Opportunity Id Returns List<OpportunityLineItem>  Updated Opportunity Product records See QuoteSyncTest.updateOppLines updateOppLinesStdSyncFields(oppId) Update only standard fields on OpportunityLineItem  records Signature private static List<OpportunityLineItem> updateOppLinesStdSyncFields(Id oppId) Parameters oppId Type: Id Opportunity Id Returns List<OpportunityLineItem>  Updated Opportunity Product records See QuoteSyncTest.updateOppLines updateOppLinesSyncedField(oppId, field) Update a specific field on OpportunityLineItem  records for a specific Opportunity Signature private static List<OpportunityLineItem> updateOppLinesSyncedField(Id oppId, String field) Parameters oppId Type: Id Opportuniyt Id field Type: String The field name Returns List<OpportunityLineItem>  Updated Opportunity Product records updateOppNotSyncedField(oppId) Change the Opportunity  CloseDate to today(if null - otherwise, add a day) and update. Signature private static Opportunity updateOppNotSyncedField(Id oppId) Parameters oppId Type: Id Opportunity Id Returns Opportunity  Updated Opportunity updateQuote(quoteId) Re-fill Quote  fields and update Quote Signature private static Quote updateQuote(Id quoteId) Parameters quoteId Type: Id Quote Id Returns Quote  The updated Quote See QuoteSyncTest.updateQuote updateQuote(quoteId, updateNullOrFalse) Re-fill Quote  fields and update Quote Signature private static Quote updateQuote(Id quoteId, Boolean updateNullOrFalse) Parameters quoteId Type: Id Quote Id updateNullOrFalse Type: Boolean Put null in custom fields if true. Put values if false. Returns Quote  The updated Quote updateQuoteLines(quoteId) Update all standard and synced fields on QuoteLineItem  records and put a value in each field Signature private static List<QuoteLineItem> updateQuoteLines(Id quoteId) Parameters quoteId Type: Id Quote Id Returns List<QuoteLineItem>  Updated Opportunity Product records See QuoteSyncTest.updateQuoteLines updateQuoteLines(quoteId, stdSyncField, customSyncField) Update fields on QuoteLineItem  records and put a value in each field Signature private static List<QuoteLineItem> updateQuoteLines(Id quoteId, Boolean stdSyncField, Boolean customSyncField) Parameters quoteId Type: Id Quote Id stdSyncField Type: Boolean Update standard fields? customSyncField Type: Boolean Update custom sync fields? Returns List<QuoteLineItem>  Updated Quote Line Item records See QuoteSyncTest.updateQuoteLines updateQuoteLines(quoteId, stdSyncField, customSyncField, updateNullOrFalse) Update fields on QuoteLineItem  records Signature private static List<QuoteLineItem> updateQuoteLines(Id quoteId, Boolean stdSyncField, Boolean customSyncField, Boolean updateNullOrFalse) Parameters quoteId Type: Id Quote Id stdSyncField Type: Boolean Update standard fields? customSyncField Type: Boolean Update custom sync fields? updateNullOrFalse Type: Boolean Put null in fields if true. Put values if false. Returns List<QuoteLineItem>  Updated Quote Line Item records updateQuoteLinesCustomSyncFields(quoteId) Update custom sync fields on QuoteLineItem  records and put a value in each field Signature private static List<QuoteLineItem> updateQuoteLinesCustomSyncFields(Id quoteId) Parameters quoteId Type: Id Quote Id Returns List<QuoteLineItem>  Updated Quote Line Item records See QuoteSyncTest.updateQuoteLines updateQuoteLinesStdSyncFields(quoteId) Update all standard fields on QuoteLineItem  records and put a value in each field Signature private static List<QuoteLineItem> updateQuoteLinesStdSyncFields(Id quoteId) Parameters quoteId Type: Id Quote Id Returns List<QuoteLineItem>  Updated Opportunity Product records See QuoteSyncTest.updateQuoteLines updateQuoteLinesSyncedField(quoteId, field) Update a specific field on QuoteLineItem  records for a specific Quote Signature private static List<QuoteLineItem> updateQuoteLinesSyncedField(Id quoteId, String field) Parameters quoteId Type: Id Quote Id field Type: String Field name Returns List<QuoteLineItem>  Updated Quote Line Item records updateQuoteNotSyncedField(quoteId) Change the Quote  Expiration date to today(if null - otherwise, add a day) and update. Signature private static Quote updateQuoteNotSyncedField(Id quoteId) Parameters quoteId Type: Id Quote Id Returns Quote  Updated Quote"
    }
];
